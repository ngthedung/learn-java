/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelKeyboardA.java
 *
 * Created on Sep 11, 2013, 1:51:41 PM
 */
package com.hkt.client.swingexp.app.virtualkey.text;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.Timer;

import com.hkt.client.swingexp.app.component.PanelBackground;
import com.hkt.client.swingexp.app.component.TextPopup;
import com.hkt.client.swingexp.app.core.HKTFile;
import com.hkt.client.swingexp.homescreen.HomeScreen;

/**
 *
 * @author BinhMinh
 */
/**position = 0 thi ưu tiên trước*/
public class PanelKeyboardForDialog extends JPanel{

    /**flag shift, mặc định false*/
    private boolean shift = false;
    /**flag capslock, mặc định false*/
    private boolean capsLock = false;
    /**/
    private JTextField textField;
    private JTextArea textArea;
    private JSpinner textSpinner;
    private JTable table;
    /**/
    private int index = 0;
    /**typeVirtualKey == 0 (keypad) và != 0 (keyboard) */
    private int typeVirtualKey;
    private int rowSelected;
    /**/
    private String url;
    private String data = "DataKeyboard";
    private String toolTipText;
    private List<String> listKeyboard;
    /**/
    private boolean vietnamese = false;
    private boolean flagBackground = true;
    private boolean flagAll = false;
    private boolean flagSale = false;
    /**/
    private Timer timerBackspace;
    private Timer timerDelete;
    private Timer timerLeft;
    private Timer timerRight;

    public PanelKeyboardForDialog() {
        initComponents();
        File file = HKTFile.getFile("DataBase", "");
        url = file.getAbsolutePath();
        loadKeyboard();
        if (typeVirtualKey != 0) {
            textField.setVisible(false);
            textArea.setVisible(false);
            textSpinner.setVisible(false);
            btnGO.setVisible(false);
        }

        timerBackspace = new Timer(150, new ActionListener() {

            
            public void actionPerformed(ActionEvent e) {
                actionBackspace();
            }
        });

        timerDelete = new Timer(150, new ActionListener() {

            
            public void actionPerformed(ActionEvent e) {
                actionDelete();
            }
        });

        timerLeft = new Timer(150, new ActionListener() {

            
            public void actionPerformed(ActionEvent e) {
                actionLeft();
            }
        });

        timerRight = new Timer(150, new ActionListener() {

            
            public void actionPerformed(ActionEvent e) {
                actionRight();
            }
        });
        actionButtonMargin();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackground1 = new PanelBackground();
        panelBackground2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnSymbol1 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnSymbol2 = new javax.swing.JButton();
        btnSymbol3 = new javax.swing.JButton();
        btnBackSpace = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnQ = new javax.swing.JButton();
        btnW = new javax.swing.JButton();
        btnE = new javax.swing.JButton();
        btnR = new javax.swing.JButton();
        btnT = new javax.swing.JButton();
        btnY = new javax.swing.JButton();
        btnU = new javax.swing.JButton();
        btnI = new javax.swing.JButton();
        btnO = new javax.swing.JButton();
        btnP = new javax.swing.JButton();
        btnSymbol4 = new javax.swing.JButton();
        btnSymbol5 = new javax.swing.JButton();
        btnSymbol6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnCapsLock = new javax.swing.JButton();
        btnA = new javax.swing.JButton();
        btnS = new javax.swing.JButton();
        btnD = new javax.swing.JButton();
        btnF = new javax.swing.JButton();
        btnG = new javax.swing.JButton();
        btnH = new javax.swing.JButton();
        btnJ = new javax.swing.JButton();
        btnK = new javax.swing.JButton();
        btnL = new javax.swing.JButton();
        btnSymbol7 = new javax.swing.JButton();
        btnSymbol8 = new javax.swing.JButton();
        btnSymbol9 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnShift = new javax.swing.JButton();
        btnZ = new javax.swing.JButton();
        btnX = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        btnV = new javax.swing.JButton();
        btnB = new javax.swing.JButton();
        btnN = new javax.swing.JButton();
        btnM = new javax.swing.JButton();
        btnSymbol10 = new javax.swing.JButton();
        btnSymbol11 = new javax.swing.JButton();
        btnEnter = new javax.swing.JButton();
        btnUp = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        btnClean = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEnVn = new javax.swing.JButton();
        btnSpace = new javax.swing.JButton();
        brnMoveLeft = new javax.swing.JButton();
        btnMoveRight = new javax.swing.JButton();
        btnDown = new javax.swing.JButton();
        panelComponent = new javax.swing.JPanel();
        fieldView = new javax.swing.JTextField();
        scrollPane = new javax.swing.JScrollPane();
        areaView = new javax.swing.JTextArea();
        btnGO = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(32767, 280));
        setPreferredSize(new java.awt.Dimension(700, 280));

        panelBackground1.setMaximumSize(new java.awt.Dimension(32767, 280));
        panelBackground1.setPreferredSize(new java.awt.Dimension(700, 280));

        panelBackground2.setBackground(new java.awt.Color(255, 255, 255));
        panelBackground2.setMaximumSize(new java.awt.Dimension(702, 275));
        panelBackground2.setMinimumSize(new java.awt.Dimension(702, 275));
        panelBackground2.setOpaque(false);
        panelBackground2.setPreferredSize(new java.awt.Dimension(702, 275));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(""); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(0, 270));
        jLabel1.setMinimumSize(new java.awt.Dimension(0, 270));
        jLabel1.setPreferredSize(new java.awt.Dimension(0, 270));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(""); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(34, 280));
        jLabel2.setMinimumSize(new java.awt.Dimension(0, 280));
        jLabel2.setPreferredSize(new java.awt.Dimension(0, 270));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(700, 240));
        jPanel1.setMinimumSize(new java.awt.Dimension(700, 240));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 240));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(700, 48));
        jPanel2.setMinimumSize(new java.awt.Dimension(700, 48));
        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(700, 48));

        btnSymbol1.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol1.setText(""); // NOI18N
        btnSymbol1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol1.setMaximumSize(new java.awt.Dimension(48, 48));
        btnSymbol1.setMinimumSize(new java.awt.Dimension(48, 48));
        btnSymbol1.setPreferredSize(new java.awt.Dimension(48, 48));
        btnSymbol1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol1ActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn1.setText("1"); // NOI18N
        btn1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn1.setMaximumSize(new java.awt.Dimension(48, 48));
        btn1.setMinimumSize(new java.awt.Dimension(48, 48));
        btn1.setPreferredSize(new java.awt.Dimension(48, 48));
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn2.setText("2"); // NOI18N
        btn2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn2.setMaximumSize(new java.awt.Dimension(48, 48));
        btn2.setMinimumSize(new java.awt.Dimension(48, 48));
        btn2.setPreferredSize(new java.awt.Dimension(48, 48));
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn3.setText("3"); // NOI18N
        btn3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn3.setMaximumSize(new java.awt.Dimension(48, 48));
        btn3.setMinimumSize(new java.awt.Dimension(48, 48));
        btn3.setPreferredSize(new java.awt.Dimension(48, 48));
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn4.setText("4"); // NOI18N
        btn4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn4.setMaximumSize(new java.awt.Dimension(48, 48));
        btn4.setMinimumSize(new java.awt.Dimension(48, 48));
        btn4.setPreferredSize(new java.awt.Dimension(48, 48));
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn5.setText("5"); // NOI18N
        btn5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn5.setMaximumSize(new java.awt.Dimension(48, 48));
        btn5.setMinimumSize(new java.awt.Dimension(48, 48));
        btn5.setPreferredSize(new java.awt.Dimension(48, 48));
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn6.setText("6"); // NOI18N
        btn6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn6.setMaximumSize(new java.awt.Dimension(48, 48));
        btn6.setMinimumSize(new java.awt.Dimension(48, 48));
        btn6.setPreferredSize(new java.awt.Dimension(48, 48));
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn7.setText("7"); // NOI18N
        btn7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn7.setMaximumSize(new java.awt.Dimension(48, 48));
        btn7.setMinimumSize(new java.awt.Dimension(48, 48));
        btn7.setPreferredSize(new java.awt.Dimension(48, 48));
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn8.setText("8"); // NOI18N
        btn8.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn8.setMaximumSize(new java.awt.Dimension(48, 48));
        btn8.setMinimumSize(new java.awt.Dimension(48, 48));
        btn8.setPreferredSize(new java.awt.Dimension(48, 48));
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn9.setText("9"); // NOI18N
        btn9.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn9.setMaximumSize(new java.awt.Dimension(48, 48));
        btn9.setMinimumSize(new java.awt.Dimension(48, 48));
        btn9.setPreferredSize(new java.awt.Dimension(48, 48));
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn0.setFont(new java.awt.Font("Tahoma", 0, 20));
        btn0.setText("0"); // NOI18N
        btn0.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn0.setMaximumSize(new java.awt.Dimension(48, 48));
        btn0.setMinimumSize(new java.awt.Dimension(48, 48));
        btn0.setPreferredSize(new java.awt.Dimension(48, 48));
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnSymbol2.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol2.setText(""); // NOI18N
        btnSymbol2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol2.setMaximumSize(new java.awt.Dimension(48, 48));
        btnSymbol2.setMinimumSize(new java.awt.Dimension(48, 48));
        btnSymbol2.setPreferredSize(new java.awt.Dimension(48, 48));
        btnSymbol2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol2ActionPerformed(evt);
            }
        });

        btnSymbol3.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol3.setText(""); // NOI18N
        btnSymbol3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol3.setMaximumSize(new java.awt.Dimension(48, 48));
        btnSymbol3.setMinimumSize(new java.awt.Dimension(48, 48));
        btnSymbol3.setPreferredSize(new java.awt.Dimension(48, 48));
        btnSymbol3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol3ActionPerformed(evt);
            }
        });

        btnBackSpace.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBackSpace.setIcon(new javax.swing.ImageIcon(HomeScreen.class.getResource("icon/backSpace.png"))); // NOI18N
        btnBackSpace.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnBackSpace.setMaximumSize(new java.awt.Dimension(75, 48));
        btnBackSpace.setMinimumSize(new java.awt.Dimension(75, 48));
        btnBackSpace.setPreferredSize(new java.awt.Dimension(75, 48));
        btnBackSpace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBackSpaceMouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBackSpaceMousePressed(evt);
            }
        });
        btnBackSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackSpaceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnSymbol1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn3, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn7, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn8, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn9, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btn0, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol2, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol3, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnBackSpace, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSymbol1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn3, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn7, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn8, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn9, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btn0, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol3, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnBackSpace, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMaximumSize(new java.awt.Dimension(700, 48));
        jPanel3.setMinimumSize(new java.awt.Dimension(700, 48));
        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(700, 48));

        btnQ.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnQ.setText("q"); // NOI18N
        btnQ.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnQ.setMaximumSize(new java.awt.Dimension(70, 48));
        btnQ.setMinimumSize(new java.awt.Dimension(70, 48));
        btnQ.setPreferredSize(new java.awt.Dimension(70, 48));
        btnQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQActionPerformed(evt);
            }
        });

        btnW.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnW.setText("w"); // NOI18N
        btnW.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnW.setMaximumSize(new java.awt.Dimension(48, 48));
        btnW.setMinimumSize(new java.awt.Dimension(48, 48));
        btnW.setPreferredSize(new java.awt.Dimension(48, 48));
        btnW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWActionPerformed(evt);
            }
        });

        btnE.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnE.setText("e"); // NOI18N
        btnE.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnE.setMaximumSize(new java.awt.Dimension(48, 48));
        btnE.setMinimumSize(new java.awt.Dimension(48, 48));
        btnE.setPreferredSize(new java.awt.Dimension(48, 48));
        btnE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEActionPerformed(evt);
            }
        });

        btnR.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnR.setText("r"); // NOI18N
        btnR.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnR.setMaximumSize(new java.awt.Dimension(48, 48));
        btnR.setMinimumSize(new java.awt.Dimension(48, 48));
        btnR.setPreferredSize(new java.awt.Dimension(48, 48));
        btnR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRActionPerformed(evt);
            }
        });

        btnT.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnT.setText("t"); // NOI18N
        btnT.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnT.setMaximumSize(new java.awt.Dimension(48, 48));
        btnT.setMinimumSize(new java.awt.Dimension(48, 48));
        btnT.setPreferredSize(new java.awt.Dimension(48, 48));
        btnT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTActionPerformed(evt);
            }
        });

        btnY.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnY.setText("y"); // NOI18N
        btnY.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnY.setMaximumSize(new java.awt.Dimension(48, 48));
        btnY.setMinimumSize(new java.awt.Dimension(48, 48));
        btnY.setPreferredSize(new java.awt.Dimension(48, 48));
        btnY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYActionPerformed(evt);
            }
        });

        btnU.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnU.setText("u"); // NOI18N
        btnU.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnU.setMaximumSize(new java.awt.Dimension(48, 48));
        btnU.setMinimumSize(new java.awt.Dimension(48, 48));
        btnU.setPreferredSize(new java.awt.Dimension(48, 48));
        btnU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUActionPerformed(evt);
            }
        });

        btnI.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnI.setText("i"); // NOI18N
        btnI.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnI.setMaximumSize(new java.awt.Dimension(48, 48));
        btnI.setMinimumSize(new java.awt.Dimension(48, 48));
        btnI.setPreferredSize(new java.awt.Dimension(48, 48));
        btnI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIActionPerformed(evt);
            }
        });

        btnO.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnO.setText("o"); // NOI18N
        btnO.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnO.setMaximumSize(new java.awt.Dimension(48, 48));
        btnO.setMinimumSize(new java.awt.Dimension(48, 48));
        btnO.setPreferredSize(new java.awt.Dimension(48, 48));
        btnO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOActionPerformed(evt);
            }
        });

        btnP.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnP.setText("p"); // NOI18N
        btnP.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnP.setMaximumSize(new java.awt.Dimension(48, 48));
        btnP.setMinimumSize(new java.awt.Dimension(48, 48));
        btnP.setPreferredSize(new java.awt.Dimension(48, 48));
        btnP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPActionPerformed(evt);
            }
        });

        btnSymbol4.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol4.setText(""); // NOI18N
        btnSymbol4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol4.setMaximumSize(new java.awt.Dimension(48, 48));
        btnSymbol4.setMinimumSize(new java.awt.Dimension(48, 48));
        btnSymbol4.setPreferredSize(new java.awt.Dimension(48, 48));
        btnSymbol4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol4ActionPerformed(evt);
            }
        });

        btnSymbol5.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol5.setText(""); // NOI18N
        btnSymbol5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol5.setMaximumSize(new java.awt.Dimension(48, 48));
        btnSymbol5.setMinimumSize(new java.awt.Dimension(48, 48));
        btnSymbol5.setPreferredSize(new java.awt.Dimension(48, 48));
        btnSymbol5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol5ActionPerformed(evt);
            }
        });

        btnSymbol6.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol6.setText(""); // NOI18N
        btnSymbol6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol6.setMaximumSize(new java.awt.Dimension(102, 48));
        btnSymbol6.setMinimumSize(new java.awt.Dimension(102, 48));
        btnSymbol6.setPreferredSize(new java.awt.Dimension(102, 48));
        btnSymbol6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnQ, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addComponent(btnW, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnE, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnR, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnT, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnY, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnU, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnI, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnO, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnP, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol4, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol5, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnQ, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnW, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnE, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnR, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnT, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnY, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnU, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnI, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnO, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnP, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol4, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol5, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol6, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMaximumSize(new java.awt.Dimension(700, 48));
        jPanel4.setMinimumSize(new java.awt.Dimension(700, 48));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(700, 48));

        btnCapsLock.setFont(new java.awt.Font("Tahoma", 0, 18));
        btnCapsLock.setText("CapsLock"); // NOI18N
        btnCapsLock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCapsLock.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnCapsLock.setMaximumSize(new java.awt.Dimension(80, 48));
        btnCapsLock.setMinimumSize(new java.awt.Dimension(80, 48));
        btnCapsLock.setPreferredSize(new java.awt.Dimension(80, 48));
        btnCapsLock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapsLockActionPerformed(evt);
            }
        });

        btnA.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnA.setText("a"); // NOI18N
        btnA.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnA.setMaximumSize(new java.awt.Dimension(48, 48));
        btnA.setMinimumSize(new java.awt.Dimension(48, 48));
        btnA.setPreferredSize(new java.awt.Dimension(48, 48));
        btnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAActionPerformed(evt);
            }
        });

        btnS.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnS.setText("s"); // NOI18N
        btnS.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnS.setMaximumSize(new java.awt.Dimension(48, 48));
        btnS.setMinimumSize(new java.awt.Dimension(48, 48));
        btnS.setPreferredSize(new java.awt.Dimension(48, 48));
        btnS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSActionPerformed(evt);
            }
        });

        btnD.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnD.setText("d"); // NOI18N
        btnD.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnD.setMaximumSize(new java.awt.Dimension(48, 48));
        btnD.setMinimumSize(new java.awt.Dimension(48, 48));
        btnD.setPreferredSize(new java.awt.Dimension(48, 48));
        btnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDActionPerformed(evt);
            }
        });

        btnF.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnF.setText("f"); // NOI18N
        btnF.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnF.setMaximumSize(new java.awt.Dimension(48, 48));
        btnF.setMinimumSize(new java.awt.Dimension(48, 48));
        btnF.setPreferredSize(new java.awt.Dimension(48, 48));
        btnF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFActionPerformed(evt);
            }
        });

        btnG.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnG.setText("g"); // NOI18N
        btnG.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnG.setMaximumSize(new java.awt.Dimension(48, 48));
        btnG.setMinimumSize(new java.awt.Dimension(48, 48));
        btnG.setPreferredSize(new java.awt.Dimension(48, 48));
        btnG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGActionPerformed(evt);
            }
        });

        btnH.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnH.setText("h"); // NOI18N
        btnH.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnH.setMaximumSize(new java.awt.Dimension(48, 48));
        btnH.setMinimumSize(new java.awt.Dimension(48, 48));
        btnH.setPreferredSize(new java.awt.Dimension(48, 48));
        btnH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHActionPerformed(evt);
            }
        });

        btnJ.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnJ.setText("j"); // NOI18N
        btnJ.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnJ.setMaximumSize(new java.awt.Dimension(48, 48));
        btnJ.setMinimumSize(new java.awt.Dimension(48, 48));
        btnJ.setPreferredSize(new java.awt.Dimension(48, 48));
        btnJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJActionPerformed(evt);
            }
        });

        btnK.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnK.setText("k"); // NOI18N
        btnK.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnK.setMaximumSize(new java.awt.Dimension(48, 48));
        btnK.setMinimumSize(new java.awt.Dimension(48, 48));
        btnK.setPreferredSize(new java.awt.Dimension(48, 48));
        btnK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKActionPerformed(evt);
            }
        });

        btnL.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnL.setText("l"); // NOI18N
        btnL.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnL.setMaximumSize(new java.awt.Dimension(48, 48));
        btnL.setMinimumSize(new java.awt.Dimension(48, 48));
        btnL.setPreferredSize(new java.awt.Dimension(48, 48));
        btnL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLActionPerformed(evt);
            }
        });

        btnSymbol7.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol7.setText(""); // NOI18N
        btnSymbol7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol7.setMaximumSize(new java.awt.Dimension(48, 48));
        btnSymbol7.setMinimumSize(new java.awt.Dimension(48, 48));
        btnSymbol7.setPreferredSize(new java.awt.Dimension(48, 48));
        btnSymbol7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol7ActionPerformed(evt);
            }
        });

        btnSymbol8.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol8.setText(""); // NOI18N
        btnSymbol8.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol8.setMaximumSize(new java.awt.Dimension(48, 48));
        btnSymbol8.setMinimumSize(new java.awt.Dimension(48, 48));
        btnSymbol8.setPreferredSize(new java.awt.Dimension(48, 48));
        btnSymbol8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol8ActionPerformed(evt);
            }
        });

        btnSymbol9.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol9.setText(""); // NOI18N
        btnSymbol9.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol9.setMaximumSize(new java.awt.Dimension(92, 48));
        btnSymbol9.setMinimumSize(new java.awt.Dimension(92, 48));
        btnSymbol9.setPreferredSize(new java.awt.Dimension(92, 48));
        btnSymbol9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(btnCapsLock, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addComponent(btnA, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnS, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnD, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnF, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnG, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnH, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnJ, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnK, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnL, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol7, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol8, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCapsLock, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnA, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnS, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnD, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnF, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnG, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnH, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnJ, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnK, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnL, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol7, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol8, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol9, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setMaximumSize(new java.awt.Dimension(700, 48));
        jPanel5.setMinimumSize(new java.awt.Dimension(700, 48));
        jPanel5.setOpaque(false);
        jPanel5.setPreferredSize(new java.awt.Dimension(700, 48));

        btnShift.setFont(new java.awt.Font("Tahoma", 0, 18));
        btnShift.setText("Shift"); // NOI18N
        btnShift.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnShift.setPreferredSize(new java.awt.Dimension(80, 48));
        btnShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShiftActionPerformed(evt);
            }
        });

        btnZ.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnZ.setText("z"); // NOI18N
        btnZ.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnZ.setMaximumSize(new java.awt.Dimension(48, 48));
        btnZ.setMinimumSize(new java.awt.Dimension(48, 48));
        btnZ.setPreferredSize(new java.awt.Dimension(48, 48));
        btnZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZActionPerformed(evt);
            }
        });

        btnX.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnX.setText("x"); // NOI18N
        btnX.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnX.setMaximumSize(new java.awt.Dimension(48, 48));
        btnX.setMinimumSize(new java.awt.Dimension(48, 48));
        btnX.setPreferredSize(new java.awt.Dimension(48, 48));
        btnX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXActionPerformed(evt);
            }
        });

        btnC.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnC.setText("c"); // NOI18N
        btnC.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnC.setMaximumSize(new java.awt.Dimension(48, 48));
        btnC.setMinimumSize(new java.awt.Dimension(48, 48));
        btnC.setPreferredSize(new java.awt.Dimension(48, 48));
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        btnV.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnV.setText("v"); // NOI18N
        btnV.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnV.setMaximumSize(new java.awt.Dimension(48, 48));
        btnV.setMinimumSize(new java.awt.Dimension(48, 48));
        btnV.setPreferredSize(new java.awt.Dimension(48, 48));
        btnV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVActionPerformed(evt);
            }
        });

        btnB.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnB.setText("b"); // NOI18N
        btnB.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnB.setMaximumSize(new java.awt.Dimension(48, 48));
        btnB.setMinimumSize(new java.awt.Dimension(48, 48));
        btnB.setPreferredSize(new java.awt.Dimension(48, 48));
        btnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBActionPerformed(evt);
            }
        });

        btnN.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnN.setText("n"); // NOI18N
        btnN.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnN.setMaximumSize(new java.awt.Dimension(48, 48));
        btnN.setMinimumSize(new java.awt.Dimension(48, 48));
        btnN.setPreferredSize(new java.awt.Dimension(48, 48));
        btnN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNActionPerformed(evt);
            }
        });

        btnM.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnM.setText("m"); // NOI18N
        btnM.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnM.setMaximumSize(new java.awt.Dimension(48, 48));
        btnM.setMinimumSize(new java.awt.Dimension(48, 48));
        btnM.setPreferredSize(new java.awt.Dimension(48, 48));
        btnM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMActionPerformed(evt);
            }
        });

        btnSymbol10.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol10.setText(""); // NOI18N
        btnSymbol10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol10.setMaximumSize(new java.awt.Dimension(48, 48));
        btnSymbol10.setMinimumSize(new java.awt.Dimension(48, 48));
        btnSymbol10.setPreferredSize(new java.awt.Dimension(48, 48));
        btnSymbol10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol10ActionPerformed(evt);
            }
        });

        btnSymbol11.setFont(new java.awt.Font("Tahoma", 0, 20));
        btnSymbol11.setText(""); // NOI18N
        btnSymbol11.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSymbol11.setMaximumSize(new java.awt.Dimension(48, 48));
        btnSymbol11.setMinimumSize(new java.awt.Dimension(48, 48));
        btnSymbol11.setPreferredSize(new java.awt.Dimension(48, 48));
        btnSymbol11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSymbol11ActionPerformed(evt);
            }
        });

        btnEnter.setFont(new java.awt.Font("Tahoma", 0, 18));
        btnEnter.setText("Enter"); // NOI18N
        btnEnter.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnEnter.setMaximumSize(new java.awt.Dimension(140, 48));
        btnEnter.setMinimumSize(new java.awt.Dimension(140, 48));
        btnEnter.setPreferredSize(new java.awt.Dimension(140, 48));
        btnEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterActionPerformed(evt);
            }
        });

        btnUp.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUp.setIcon(new javax.swing.ImageIcon(HomeScreen.class.getResource("icon/up.png"))); // NOI18N
        btnUp.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnUp.setMaximumSize(new java.awt.Dimension(48, 48));
        btnUp.setMinimumSize(new java.awt.Dimension(48, 48));
        btnUp.setPreferredSize(new java.awt.Dimension(48, 48));
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(btnShift, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addComponent(btnZ, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnX, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnC, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnV, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnB, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnN, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnM, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol10, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnSymbol11, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnEnter, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addComponent(btnUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnShift, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnZ, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnX, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnC, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnV, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnB, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnN, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnM, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol10, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSymbol11, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnEnter, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnUp, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setMaximumSize(new java.awt.Dimension(700, 48));
        jPanel6.setMinimumSize(new java.awt.Dimension(700, 48));
        jPanel6.setOpaque(false);
        jPanel6.setPreferredSize(new java.awt.Dimension(700, 48));

        btnClean.setFont(new java.awt.Font("Tahoma", 0, 18));
        btnClean.setText("Clean"); // NOI18N
        btnClean.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnClean.setMaximumSize(new java.awt.Dimension(80, 48));
        btnClean.setMinimumSize(new java.awt.Dimension(80, 48));
        btnClean.setPreferredSize(new java.awt.Dimension(80, 48));
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 18));
        btnDelete.setText("Delete"); // NOI18N
        btnDelete.setAlignmentY(0.0F);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setIconTextGap(0);
        btnDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnDelete.setMaximumSize(new java.awt.Dimension(80, 48));
        btnDelete.setMinimumSize(new java.awt.Dimension(80, 48));
        btnDelete.setPreferredSize(new java.awt.Dimension(80, 48));
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDeleteMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnDeleteMouseReleased(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEnVn.setFont(new java.awt.Font("Tahoma", 0, 18));
        btnEnVn.setText("En"); // NOI18N
        btnEnVn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnEnVn.setMaximumSize(new java.awt.Dimension(80, 48));
        btnEnVn.setMinimumSize(new java.awt.Dimension(80, 48));
        btnEnVn.setPreferredSize(new java.awt.Dimension(80, 48));
        btnEnVn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnVnActionPerformed(evt);
            }
        });

        btnSpace.setFont(new java.awt.Font("Tahoma", 0, 18));
        btnSpace.setText(" "); // NOI18N
        btnSpace.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnSpace.setMaximumSize(new java.awt.Dimension(316, 48));
        btnSpace.setMinimumSize(new java.awt.Dimension(316, 48));
        btnSpace.setPreferredSize(new java.awt.Dimension(316, 48));
        btnSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpaceActionPerformed(evt);
            }
        });

        brnMoveLeft.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        brnMoveLeft.setIcon(new javax.swing.ImageIcon(HomeScreen.class.getResource("icon/left.png"))); // NOI18N
        brnMoveLeft.setText(""); // NOI18N
        brnMoveLeft.setMargin(new java.awt.Insets(0, 0, 0, 0));
        brnMoveLeft.setMaximumSize(new java.awt.Dimension(48, 48));
        brnMoveLeft.setMinimumSize(new java.awt.Dimension(48, 48));
        brnMoveLeft.setPreferredSize(new java.awt.Dimension(48, 48));
        brnMoveLeft.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                brnMoveLeftMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                brnMoveLeftMouseReleased(evt);
            }
        });
        brnMoveLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnMoveLeftActionPerformed(evt);
            }
        });

        btnMoveRight.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMoveRight.setIcon(new javax.swing.ImageIcon(HomeScreen.class.getResource("icon/right.png"))); // NOI18N
        btnMoveRight.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnMoveRight.setMaximumSize(new java.awt.Dimension(48, 48));
        btnMoveRight.setMinimumSize(new java.awt.Dimension(48, 48));
        btnMoveRight.setPreferredSize(new java.awt.Dimension(48, 48));
        btnMoveRight.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnMoveRightMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnMoveRightMouseReleased(evt);
            }
        });
        btnMoveRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveRightActionPerformed(evt);
            }
        });

        btnDown.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDown.setIcon(new javax.swing.ImageIcon(HomeScreen.class.getResource("icon/down.png"))); // NOI18N
        btnDown.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnDown.setMaximumSize(new java.awt.Dimension(48, 48));
        btnDown.setMinimumSize(new java.awt.Dimension(48, 48));
        btnDown.setPreferredSize(new java.awt.Dimension(48, 48));
        btnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnClean, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addComponent(btnEnVn, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addComponent(btnSpace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(brnMoveLeft, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnMoveRight, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addComponent(btnDown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnClean, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnEnVn, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnSpace, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(brnMoveLeft, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnMoveRight, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnDown, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
        );

        panelComponent.setBackground(new java.awt.Color(255, 255, 255));
        panelComponent.setMaximumSize(new java.awt.Dimension(700, 30));
        panelComponent.setMinimumSize(new java.awt.Dimension(700, 30));
        panelComponent.setOpaque(false);
        panelComponent.setPreferredSize(new java.awt.Dimension(700, 30));

        fieldView.setFont(new java.awt.Font("Tahoma", 0, 14));
        fieldView.setText(""); // NOI18N
        fieldView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldViewMouseClicked(evt);
            }
        });

        scrollPane.setMaximumSize(new java.awt.Dimension(32767, 30));
        scrollPane.setMinimumSize(new java.awt.Dimension(23, 30));
        scrollPane.setPreferredSize(new java.awt.Dimension(246, 30));

        areaView.setColumns(20);
        areaView.setFont(new java.awt.Font("Tahoma", 0, 14));
        areaView.setText(""); // NOI18N
        areaView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                areaViewMouseClicked(evt);
            }
        });
        scrollPane.setViewportView(areaView);

        btnGO.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnGO.setText("OK"); // NOI18N
        btnGO.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnGO.setPreferredSize(new java.awt.Dimension(75, 30));
        btnGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelComponentLayout = new javax.swing.GroupLayout(panelComponent);
        panelComponent.setLayout(panelComponentLayout);
        panelComponentLayout.setHorizontalGroup(
            panelComponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelComponentLayout.createSequentialGroup()
                .addComponent(fieldView, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(btnGO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelComponentLayout.setVerticalGroup(
            panelComponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fieldView, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnGO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout panelBackground2Layout = new javax.swing.GroupLayout(panelBackground2);
        panelBackground2.setLayout(panelBackground2Layout);
        panelBackground2Layout.setHorizontalGroup(
            panelBackground2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackground2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelBackground2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelComponent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelBackground2Layout.setVerticalGroup(
            panelBackground2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(panelBackground2Layout.createSequentialGroup()
                .addComponent(panelComponent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        panelBackground1.setLayout(new GridLayout());
        panelBackground1.add(panelBackground2);
        this.setLayout(new GridLayout());
        this.add(panelBackground1);
//        this.add(createLable(), BorderLayout.EAST);
//        this.add(createLable(), BorderLayout.WEST);
//        this.add(createLable2(), BorderLayout.SOUTH);
        this.setOpaque(false);
      //  panelBackground1.setOpaque(false);
    }// </editor-fold>//GEN-END:initComponents
    private JLabel createLable() {
      JLabel label = new JLabel();
      label.setSize(20, 20);
      label.setPreferredSize(label.getSize());
      return label;
    }
    private JLabel createLable2() {
      JLabel label = new JLabel();
      label.setSize(2, 2);
      label.setPreferredSize(label.getSize());
      return label;
    }

private void btnSymbol1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol1ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol1);
    } else {
        virtualKeyboardOn(btnSymbol1);
    }
}//GEN-LAST:event_btnSymbol1ActionPerformed

private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn1);
    } else {
        virtualKeyboardOn(btn1);
    }
}//GEN-LAST:event_btn1ActionPerformed

private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn2);
    } else {
        virtualKeyboardOn(btn2);
    }
}//GEN-LAST:event_btn2ActionPerformed

private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn3);
    } else {
        virtualKeyboardOn(btn3);
    }
}//GEN-LAST:event_btn3ActionPerformed

private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn4);
    } else {
        virtualKeyboardOn(btn4);
    }
}//GEN-LAST:event_btn4ActionPerformed

private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn5);
    } else {
        virtualKeyboardOn(btn5);
    }
}//GEN-LAST:event_btn5ActionPerformed

private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn6);
    } else {
        virtualKeyboardOn(btn6);
    }
}//GEN-LAST:event_btn6ActionPerformed

private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn7);
    } else {
        virtualKeyboardOn(btn7);
    }
}//GEN-LAST:event_btn7ActionPerformed

private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn8);
    } else {
        virtualKeyboardOn(btn8);
    }
}//GEN-LAST:event_btn8ActionPerformed

private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn9);
    } else {
        virtualKeyboardOn(btn9);
    }
}//GEN-LAST:event_btn9ActionPerformed

private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btn0);
    } else {
        virtualKeyboardOn(btn0);
    }
}//GEN-LAST:event_btn0ActionPerformed

private void btnSymbol2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol2ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol2);
    } else {
        virtualKeyboardOn(btnSymbol2);
    }
}//GEN-LAST:event_btnSymbol2ActionPerformed

private void btnSymbol3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol3ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol3);
    } else {
        virtualKeyboardOn(btnSymbol3);
    }
}//GEN-LAST:event_btnSymbol3ActionPerformed

private void btnBackSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackSpaceActionPerformed
    actionBackspace();
}//GEN-LAST:event_btnBackSpaceActionPerformed

private void btnQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnQ);
    } else {
        virtualKeyboardOn(btnQ);
    }
}//GEN-LAST:event_btnQActionPerformed

private void btnWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnW);
    } else {
        virtualKeyboardOn(btnW);
    }
}//GEN-LAST:event_btnWActionPerformed

private void btnEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnE);
    } else {
        virtualKeyboardOn(btnE);
    }
}//GEN-LAST:event_btnEActionPerformed

private void btnRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnR);
    } else {
        virtualKeyboardOn(btnR);
    }
}//GEN-LAST:event_btnRActionPerformed

private void btnTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnT);
    } else {
        virtualKeyboardOn(btnT);
    }
}//GEN-LAST:event_btnTActionPerformed

private void btnYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnY);
    } else {
        virtualKeyboardOn(btnY);
    }
}//GEN-LAST:event_btnYActionPerformed

private void btnUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnU);
    } else {
        virtualKeyboardOn(btnU);
    }
}//GEN-LAST:event_btnUActionPerformed

private void btnIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnI);
    } else {
        virtualKeyboardOn(btnI);
    }
}//GEN-LAST:event_btnIActionPerformed

private void btnOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnO);
    } else {
        virtualKeyboardOn(btnO);
    }
}//GEN-LAST:event_btnOActionPerformed

private void btnPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnP);
    } else {
        virtualKeyboardOn(btnP);
    }
}//GEN-LAST:event_btnPActionPerformed

private void btnSymbol4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol4ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol4);
    } else {
        virtualKeyboardOn(btnSymbol4);
    }
}//GEN-LAST:event_btnSymbol4ActionPerformed

private void btnSymbol5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol5ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol5);
    } else {
        virtualKeyboardOn(btnSymbol5);
    }
}//GEN-LAST:event_btnSymbol5ActionPerformed

private void btnSymbol6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol6ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol6);
    } else {
        virtualKeyboardOn(btnSymbol6);
    }
}//GEN-LAST:event_btnSymbol6ActionPerformed

private void btnCapsLockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapsLockActionPerformed
    if (capsLock == false) {
        capsLock = true;
    } else {
        capsLock = false;
    }
//    if (capsLock == true) {
//        btnCapsLock.setText("CapsLock");
//    } else {
//        btnCapsLock.setText("CapsLock");
//    }
    checkButton();
}//GEN-LAST:event_btnCapsLockActionPerformed

private void btnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnA);
    } else {
        virtualKeyboardOn(btnA);
    }
}//GEN-LAST:event_btnAActionPerformed

private void btnSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnS);
    } else {
        virtualKeyboardOn(btnS);
    }
}//GEN-LAST:event_btnSActionPerformed

private void btnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnD);
    } else {
        virtualKeyboardOn(btnD);
    }
}//GEN-LAST:event_btnDActionPerformed

private void btnFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnF);
    } else {
        virtualKeyboardOn(btnF);
    }
}//GEN-LAST:event_btnFActionPerformed

private void btnGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnG);
    } else {
        virtualKeyboardOn(btnG);
    }
}//GEN-LAST:event_btnGActionPerformed

private void btnHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnH);
    } else {
        virtualKeyboardOn(btnH);
    }
}//GEN-LAST:event_btnHActionPerformed

private void btnJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnJ);
    } else {
        virtualKeyboardOn(btnJ);
    }
}//GEN-LAST:event_btnJActionPerformed

private void btnKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnK);
    } else {
        virtualKeyboardOn(btnK);
    }
}//GEN-LAST:event_btnKActionPerformed

private void btnLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnL);
    } else {
        virtualKeyboardOn(btnL);
    }
}//GEN-LAST:event_btnLActionPerformed

private void btnSymbol7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol7ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol7);
    } else {
        virtualKeyboardOn(btnSymbol7);
    }
}//GEN-LAST:event_btnSymbol7ActionPerformed

private void btnSymbol8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol8ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol8);
    } else {
        virtualKeyboardOn(btnSymbol8);
    }
}//GEN-LAST:event_btnSymbol8ActionPerformed

private void btnSymbol9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol9ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol9);
    } else {
        virtualKeyboardOn(btnSymbol9);
    }
}//GEN-LAST:event_btnSymbol9ActionPerformed

private void btnShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShiftActionPerformed
    if (shift == false) {
        shift = true;
        if (capsLock == false) {
            capsLock = true;
        } else {
            capsLock = false;
        }
    } else {
        shift = false;
        if (capsLock == false) {
            capsLock = true;
        } else {
            capsLock = false;
        }
    }
    if (shift == true) {
        btnShift.setBackground(Color.WHITE);
    }
    checkButton();
}//GEN-LAST:event_btnShiftActionPerformed

private void btnZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnZ);
    } else {
        virtualKeyboardOn(btnZ);
    }
}//GEN-LAST:event_btnZActionPerformed

private void btnXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnX);
    } else {
        virtualKeyboardOn(btnX);
    }
}//GEN-LAST:event_btnXActionPerformed

private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnC);
    } else {
        virtualKeyboardOn(btnC);
    }
}//GEN-LAST:event_btnCActionPerformed

private void btnVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnV);
    } else {
        virtualKeyboardOn(btnV);
    }
}//GEN-LAST:event_btnVActionPerformed

private void btnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnB);
    } else {
        virtualKeyboardOn(btnB);
    }
}//GEN-LAST:event_btnBActionPerformed

private void btnNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnN);
    } else {
        virtualKeyboardOn(btnN);
    }
}//GEN-LAST:event_btnNActionPerformed

private void btnMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnM);
    } else {
        virtualKeyboardOn(btnM);
    }
}//GEN-LAST:event_btnMActionPerformed

private void btnSymbol10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol10ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol10);
    } else {
        virtualKeyboardOn(btnSymbol10);
    }
}//GEN-LAST:event_btnSymbol10ActionPerformed

private void btnSymbol11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSymbol11ActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSymbol11);
    } else {
        virtualKeyboardOn(btnSymbol11);
    }
}//GEN-LAST:event_btnSymbol11ActionPerformed

private void btnEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterActionPerformed
    if (shift == true) {
        shift = false;
    }
    if (typeVirtualKey == 0) {
        if (textField != null) {
            /**Trường hợp là fieldView*/
            if (fieldView.getText().length() > textField.getText().length()) {
                textField.setText(fieldView.getText());
                index = fieldView.getCaretPosition();
            }
            if (index > textField.getText().length()) {
                index = textField.getText().length();
                index = fieldView.getText().length();
            }
            index = fieldView.getCaretPosition();
            StringBuilder builder = new StringBuilder();
            builder.append(textField.getText());
            builder.insert(index, "\n");
            fieldView.setText(builder.toString());
            textField.setText(builder.toString());
            index = index + 1;
            fieldView.requestFocus();
            fieldView.setCaretPosition(index);
        }
        if (textArea != null) {
            if (areaView.getText().length() > textArea.getText().length()) {
                textArea.setText(areaView.getText());
                index = areaView.getCaretPosition();
            }
            if (index > textArea.getText().length()) {
                index = areaView.getText().length();
                index = textArea.getText().length();
            }
            index = areaView.getCaretPosition();
            StringBuilder builder = new StringBuilder();
            builder.append(textArea.getText());
            builder.insert(index, "\n");
            areaView.setText(builder.toString());
            textArea.setText(builder.toString());
            index = index + 1;
            areaView.requestFocus();
            areaView.setCaretPosition(index);
            builder = null;
        }
    } else {
        if (textField != null) {
            int lenght = 0;
            if (lenght < textField.getText().length()) {
                index = textField.getCaretPosition();
            }
            if (index > textField.getText().length()) {
                index = textField.getText().length();
            }
            index = textField.getCaretPosition();
            StringBuilder builder = new StringBuilder();
            builder.append(textField.getText());
            builder.insert(index, "\n");
            textField.setText(builder.toString());
            index = index + 1;
            textField.requestFocus();
            textField.setCaretPosition(index);
            lenght = builder.length();
            builder = null;
        }
        if (textArea != null) {
            index = textArea.getCaretPosition();
            int lenght = 0;
            StringBuilder builder = new StringBuilder();
            if (lenght < textArea.getText().length()) {
                index = textArea.getCaretPosition();
            }
            builder.append(textArea.getText());
            builder.insert(index, "\n");
            textArea.setText(builder.toString());
            index = index + 1;
            textArea.requestFocus();
            textArea.setCaretPosition(index);
            lenght = builder.length();
            builder = null;
        }
    }
}//GEN-LAST:event_btnEnterActionPerformed

private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
    if (table != null && table.getSelectedRow() >= 1) {
        table.setRowSelectionInterval(rowSelected - 1, rowSelected - 1);
        rowSelected = rowSelected - 1;
    }
}//GEN-LAST:event_btnUpActionPerformed

private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
    try {
        if (textField != null) {
            if (typeVirtualKey == 0) {
                fieldView.setText("");
                textField.setText("");
                index = 0;
            } else {
                textField.setText("");
                index = 0;
            }
        } else {
            if (typeVirtualKey == 0) {
                index = 0;
                areaView.setText("");
                textArea.setText("");
            } else {
                textArea.setText("");
                index = 0;
            }
        }
    } catch (Exception e) {
        return;
    }
}//GEN-LAST:event_btnCleanActionPerformed

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    actionDelete();
}//GEN-LAST:event_btnDeleteActionPerformed

private void btnEnVnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnVnActionPerformed
    if (vietnamese == false) {
        vietnamese = true;
        btnEnVn.setText("VN");
    } else {
        vietnamese = false;
        btnEnVn.setText("EN");
    }
}//GEN-LAST:event_btnEnVnActionPerformed

private void btnSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpaceActionPerformed
    if (typeVirtualKey == 0) {
        buttonClick(btnSpace);
    } else {
        virtualKeyboardOn(btnSpace);
    }
}//GEN-LAST:event_btnSpaceActionPerformed

private void brnMoveLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnMoveLeftActionPerformed
    actionLeft();
}//GEN-LAST:event_brnMoveLeftActionPerformed

private void btnMoveRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveRightActionPerformed
    actionRight();
}//GEN-LAST:event_btnMoveRightActionPerformed

private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
    if (table != null && rowSelected < table.getRowCount() - 1 && rowSelected >= 0) {
        table.setRowSelectionInterval(rowSelected + 1, rowSelected + 1);
        rowSelected = rowSelected + 1;
    }
}//GEN-LAST:event_btnDownActionPerformed

private void fieldViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldViewMouseClicked

    index = fieldView.getCaretPosition();
}//GEN-LAST:event_fieldViewMouseClicked

private void areaViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_areaViewMouseClicked
    index = areaView.getCaretPosition();
}//GEN-LAST:event_areaViewMouseClicked

private void btnBackSpaceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackSpaceMousePressed
    timerBackspace.start();
}//GEN-LAST:event_btnBackSpaceMousePressed

private void btnBackSpaceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackSpaceMouseReleased
    timerBackspace.stop();
}//GEN-LAST:event_btnBackSpaceMouseReleased

private void btnDeleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMousePressed
    timerDelete.start();
}//GEN-LAST:event_btnDeleteMousePressed

private void btnDeleteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseReleased
    timerDelete.stop();
}//GEN-LAST:event_btnDeleteMouseReleased

private void brnMoveLeftMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_brnMoveLeftMousePressed
    timerLeft.start();
}//GEN-LAST:event_brnMoveLeftMousePressed

private void brnMoveLeftMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_brnMoveLeftMouseReleased
    timerLeft.stop();
}//GEN-LAST:event_brnMoveLeftMouseReleased

private void btnMoveRightMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMoveRightMousePressed
    timerRight.start();
}//GEN-LAST:event_btnMoveRightMousePressed

private void btnMoveRightMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMoveRightMouseReleased
    timerRight.stop();
}//GEN-LAST:event_btnMoveRightMouseReleased

private void btnGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGOActionPerformed
    if (textField instanceof TextPopup) {
        textField.setText(fieldView.getText());
    } else {
        javax.swing.SwingUtilities.getWindowAncestor(PanelKeyboardForDialog.this).dispose();
    }
}//GEN-LAST:event_btnGOActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaView;
    private javax.swing.JButton brnMoveLeft;
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnA;
    private javax.swing.JButton btnB;
    private javax.swing.JButton btnBackSpace;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnCapsLock;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnD;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDown;
    private javax.swing.JButton btnE;
    private javax.swing.JButton btnEnVn;
    private javax.swing.JButton btnEnter;
    private javax.swing.JButton btnF;
    private javax.swing.JButton btnG;
    private javax.swing.JButton btnGO;
    private javax.swing.JButton btnH;
    private javax.swing.JButton btnI;
    private javax.swing.JButton btnJ;
    private javax.swing.JButton btnK;
    private javax.swing.JButton btnL;
    private javax.swing.JButton btnM;
    private javax.swing.JButton btnMoveRight;
    private javax.swing.JButton btnN;
    private javax.swing.JButton btnO;
    private javax.swing.JButton btnP;
    private javax.swing.JButton btnQ;
    private javax.swing.JButton btnR;
    private javax.swing.JButton btnS;
    private javax.swing.JButton btnShift;
    private javax.swing.JButton btnSpace;
    private javax.swing.JButton btnSymbol1;
    private javax.swing.JButton btnSymbol10;
    private javax.swing.JButton btnSymbol11;
    private javax.swing.JButton btnSymbol2;
    private javax.swing.JButton btnSymbol3;
    private javax.swing.JButton btnSymbol4;
    private javax.swing.JButton btnSymbol5;
    private javax.swing.JButton btnSymbol6;
    private javax.swing.JButton btnSymbol7;
    private javax.swing.JButton btnSymbol8;
    private javax.swing.JButton btnSymbol9;
    private javax.swing.JButton btnT;
    private javax.swing.JButton btnU;
    private javax.swing.JButton btnUp;
    private javax.swing.JButton btnV;
    private javax.swing.JButton btnW;
    private javax.swing.JButton btnX;
    private javax.swing.JButton btnY;
    private javax.swing.JButton btnZ;
    private javax.swing.JTextField fieldView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private PanelBackground panelBackground1;
    private javax.swing.JPanel panelBackground2;
    private javax.swing.JPanel panelComponent;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables

    /**typeKeybord == 0 (keypad) và != 0 (keyboard) */
    
    public void setTypeKeyboard(int typeKeyboard) {
        this.typeVirtualKey = typeKeyboard;
        if (typeKeyboard != 0) {
            panelComponent.setVisible(false);
        }
    }

    /**
     * ẩn scrollPane, textAreaView
     * null: jTable, textArea 
     */
    
    public void setTextField(JTextField textField) {
        this.textField = textField;
        /**Trường hợp == 0 là bán phím keybad*/
        if (textField != null && typeVirtualKey == 0) {
            fieldView.setVisible(true);
            fieldView.setText(textField.getText());
            fieldView.setCaretPosition(textField.getCaretPosition());
            index = textField.getCaretPosition();
            scrollPane.setVisible(false);
            areaView.setVisible(false);
            table = null;
            textArea = null;
        }
        /**Trường hợp != là keyboard*/
        if (textField != null && typeVirtualKey != 0) {
            fieldView.setVisible(false);
            scrollPane.setVisible(false);
            table = null;
            textArea = null;
        }
    }

    /**Ham setTextAria này khác với setTextField, ko có setCaretPosition*/
    
    public void setTextAria(JTextArea textArea) {
        this.textArea = textArea;
        if (textArea != null && typeVirtualKey == 0) {
            areaView.setText(textArea.getText());
            index = textArea.getCaretPosition();
            scrollPane.setVisible(true);
            fieldView.setVisible(false);
            table = null;
            textField = null;
        }
        if (textArea != null && typeVirtualKey != 0) {
            scrollPane.setVisible(true);
            fieldView.setVisible(false);
            table = null;
            textField = null;
        }
    }

    /**Truyền vào obj table và rowSelected, để xử lý*/
    
    public void setTable(JTable jTable, int rowSelected) {
        this.table = jTable;
        this.rowSelected = rowSelected;
        if (jTable != null) {
            scrollPane.setVisible(false);
            textField = null;
            textArea = null;
            fieldView.setText("");
            areaView.setText("");
        }
    }

    /**truyền Index vào textField or textArea*/
    
    public void setIndex(int index) {
        this.index = index;
        if (typeVirtualKey == 0) {
            if (textField != null) {
                fieldView.setCaretPosition(index);
            }
            if (textArea != null) {
                areaView.setCaretPosition(index);
            }
        }
    }

    /**hiện thị toolTip được truyền vào*/
    
    public void setToolTip(String toolTipText) {
        this.toolTipText = toolTipText;
    }

    /**Thiết lập màu nền màn hình ảo so với thiết lập trung của hệ thống*/
    
    public void setBackground(boolean flagBackground) {
        this.flagBackground = flagBackground;
        if (flagBackground == true) {
            panelBackground2.setOpaque(false);
        } else {
            panelBackground2.setOpaque(true);
        }
    }

    /**Set cờ cho hiển thị thất cả*/
    
    public void setShowAll(boolean flag) {
        this.flagAll = flag;
    }

    /**Set cờ cho hiển thị lương*/
    
    public void setShowSale(boolean flag) {
        this.flagSale = flag;
    }

    /**Hiển thị tất cả là sao*/
    
    public boolean isShowAll() {
        return flagAll;
    }

    /**Hiển thị lương(Sale)*/
    
    public boolean isShowSale() {
        return flagSale;
    }

    
    public void loadKeyboard() {
        listKeyboard = new ArrayList<String>();
        try {
            try {
                for (String l : readKeyboard()) {
                    listKeyboard.add(l);
                }
            } catch (ClassNotFoundException ex) {
               
            }
        } catch (IOException ex) {
        }
        if (listKeyboard.isEmpty()) {
            listKeyboard.add("0");
            listKeyboard.add("All");
        }
        if (listKeyboard.get(0).equals("1")) {
            if (listKeyboard.get(1).equals("All")) {
                flagAll = true;
            } else {
                flagAll = false;
                flagSale = true;
            }
        } else {
            flagAll = false;
            flagSale = false;
        }
    }

    public List<String> readKeyboard() throws ClassNotFoundException, IOException {
        List<String> listAccount = new ArrayList();
        FileInputStream fis = new FileInputStream(url + "/" + data);
        ObjectInputStream obj = new ObjectInputStream(fis);
        try {
            while (fis.available() != -1) {
                String acc = obj.readObject().toString();
                listAccount.add(acc);
            }
        } catch (Exception ex) {
        }

        fis.close();
        return listAccount;
    }

    /**hiển thị lại keyboard mỗi khi có một button truyền vào(sự kiện)*/
    private void virtualKeyboardOn(JButton button) {
        if (textField != null) {
            /**Lấy về vị trí Caret của textField truyền vào ở trên*/
            index = textField.getCaretPosition();
            int length = 0;
            /**Cái này điêu vãi, khai báo = 0, textField truyền vào tối thiểu = 0 */
            if (length < textField.getText().length()) {
                index = textField.getCaretPosition();
            }
            /**Cờ shift là true thì chuyển thành false, hạ cờ shift để đảm bảo ở trạng thái mặc định*/
            if (shift == true && capsLock == true) {
                shift = false;
                capsLock = false;
            }
            if (shift == true && capsLock == false) {
                shift = false;
                capsLock = false;
            }
            /**Nếu chỉ số index > độ dài textField được truyền vào thì cho bằng*/
            if (index > textField.getText().length()) {
                index = textField.getText().length();
            }
            StringBuilder builder = new StringBuilder();
            builder.append(textField.getText());
            /**Nếu flag vietnamese = true, truyền vào button gây ra sự kiện, cùng textField*/
            if (vietnamese == true) {
                String s = VietNameseUnicode.getInstance().conver(button.getText(), textField, index);
                /**Nếu trả về string đúng bằng button.getText() thì ko tiếng việt*/
                if (s.equals(button.getText())) {
                    builder.insert(index, button.getText());
                } else {
                    /**Nếu không bằng thì hiển thị tiếng việt*/
                    index = index - 1;
                    /**Trả về vị trí cần hiển thị tiếng việc, với giá trị hiển thị s*/
                    builder.setCharAt(VietNameseUnicode.index, s.charAt(0));
                }
            } else {
                /**Không vietnamese thì ko làm j, thêm vào*/
                builder.insert(index, button.getText());
            }
            /**/
            textField.setText(builder.toString());
            index = index + 1;
            textField.requestFocus();
            textField.setCaretPosition(index);
            length = builder.length();
            builder = null;
            checkButton();
        }
        if (textArea != null) {
            index = textArea.getCaretPosition();
            /**Cờ shift là true thì chuyển thành false, hạ cờ shift để đảm bảo ở trạng thái mặc định*/
            if (shift == true && capsLock == true) {
                shift = false;
                capsLock = false;
            }
            if (shift == true && capsLock == false) {
                shift = false;
                capsLock = false;
            }
            /**Đẹt hiểu, biến cục bộ, khai báo, ko dùng j ở đây*/
            int lenght = 0;
            if (lenght < textArea.getText().length()) {
                index = textArea.getText().length();
            }
            StringBuilder builder = new StringBuilder();
            builder.append(textArea.getText());
            if (vietnamese) {
                String a = VietNameseUnicode.getInstance().conver(button.getText(), textArea, index);
                if (a.equals(button.getText())) {
                    /**so sánh bằng thì nhét vào đúng = a, lại còn button.getText làm j*/
                    builder.insert(index, button.getText());
                } else {
                    index = index - 1;
                    builder.setCharAt(index, a.charAt(0));
                }
            } else {
                builder.insert(index, button.getText());
            }
            textArea.setText(builder.toString());
            index = index + 1;
            textArea.requestFocus();
            textArea.setCaretPosition(index);
            lenght = builder.length();
            builder = null;
            checkButton();
        }
    }

    /**Xử lý sự kiện khi một button click*/
    private void buttonClick(JButton button) {
        if (shift == true) {
            shift = false;
        }
        if (textField != null) {
            /**Đề phòng những button đặc biệt*/
            if (!(textField instanceof TextPopup)) {
                index = fieldView.getCaretPosition();
                /**Đoạn này khó hiểu vãi, có hàm setIndex truyền vào,ban đầu truyền index */
                StringBuilder builder = new StringBuilder();
                if (index > textField.getText().length()) {
                    index = textField.getText().length();
                    index = fieldView.getText().length();
                }
                builder.append(textField.getText());
                if (vietnamese) {
                    /**Truyền cả cái view hiển thị chứ ko phải textFile, vì ở đây là trên button*/
                    String s = VietNameseUnicode.getInstance().conver(button.getText(), fieldView, index);
                    if (s.equals(button.getText())) {
                        builder.insert(index, button.getText());
                    } else {
                        /**Phải index - 1, để set tiếng việt vào vị trí, như có chữ a, rồi thêm a nữa*/
                        index = index - 1;
                        builder.setCharAt(VietNameseUnicode.index, s.charAt(0));
                    }
                } else {
                    builder.insert(index, button.getText());
                }
                textField.setText(builder.toString());
                fieldView.setText(builder.toString());
                index = index + 1;
                fieldView.requestFocus();
                fieldView.setCaretPosition(index);
                builder = null;
                checkButton();
            } else {
                StringBuilder builder = new StringBuilder();
                builder.append(fieldView.getText());
                if (vietnamese == true) {
                    String s = VietNameseUnicode.getInstance().conver(button.getText(), fieldView, index);
                    if (s.equals(button.getText())) {
                        builder.insert(index, button.getText());
                    } else {
                        index = index - 1;
                        builder.setCharAt(index, s.charAt(0));
                    }
                } else {
                    builder.insert(index, button.getText());
                }
                fieldView.setText(builder.toString());
                index = index + 1;
                fieldView.requestFocus();;
                fieldView.setCaretPosition(index);
                checkButton();
            }
        }
        if (textArea != null) {
            index = areaView.getCaretPosition();
            if (areaView.getText().length() > textArea.getText().length()) {
                textArea.setText(areaView.getText());
                index = areaView.getCaretPosition();
            }
            /**Hài vãi*/
            if (index > textArea.getText().length()) {
                index = textArea.getText().length();
                index = areaView.getText().length();
            }
            StringBuilder builder = new StringBuilder();
            builder.append(textArea.getText());
            if (vietnamese == true) {
                String a = VietNameseUnicode.getInstance().conver(button.getText(), areaView, index);
                if (a.equals(button.getText())) {
                    builder.insert(index, button.getText());
                } else {
                    index = index - 1;
                    builder.setCharAt(index, a.charAt(0));
                }
            } else {
                builder.insert(index, button.getText());
            }
            areaView.setText(builder.toString());
            textArea.setText(builder.toString());
            index = index + 1;
            areaView.requestFocus();
            areaView.setCaretPosition(index);
            builder = null;
            checkButton();
        }
    }

    /**Set lại các giá trị text ở button với các flag Shift, Capslock được thiết lập*/
    private void checkButton() {
        JButton[] btnText = {
            btnQ, btnW, btnE, btnR, btnT, btnY, btnU, btnI, btnO, btnP,
            btnA, btnS, btnD, btnF, btnG, btnH, btnJ, btnK, btnL,
            btnZ, btnX, btnC, btnV, btnB, btnN, btnM
        };
        JButton[] btnNumber = {btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn0};
        String[] sNumber = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "0"};
        String[] shiftNumber = {"!", "@", "#", "$", "%", "^", "&", "*", "(", ")"};
        JButton[] btnSymbol = {
            btnSymbol1, btnSymbol2, btnSymbol3,
            btnSymbol4, btnSymbol5, btnSymbol6,
            btnSymbol7, btnSymbol8, btnSymbol9,
            btnSymbol10, btnSymbol11};
        String[] sSymbol = {
            "`", "-", "=",
            "[", "]", "\\",
            ";", "'", "/",
            ",", "."};
        String[] shilfSymbol = {
            "~", "_", "+",
            "{", "}", "|",
            ":", "\"", "?",
            "<", ">"
        };
        if (shift == true && capsLock == true) {
            /**Hiện Chữ cái hoa*/
            for (int i = 0; i < btnText.length; i++) {
                btnText[i].setText(btnText[i].getText().toUpperCase());
            }
            /**Hiện Kí tự đặc biệt ở phím số*/
            for (int i = 0; i < btnNumber.length; i++) {
                btnNumber[i].setText(shiftNumber[i]);
            }
            /**Hiện Kí tự đặc biệt ở phím khác*/
            for (int i = 0; i < btnSymbol.length; i++) {
                btnSymbol[i].setText(shilfSymbol[i]);
            }
        }
        if (shift == true && capsLock == false) {
            /**ẩn Chữ cái hoa*/
            for (int i = 0; i < btnText.length; i++) {
                btnText[i].setText(btnText[i].getText().toLowerCase());
            }
            /**Hiện Kí tự đặc biệt ở phím số*/
            for (int i = 0; i < btnNumber.length; i++) {
                btnNumber[i].setText(shiftNumber[i]);
            }
            /**Hiện Kí tự đặc biệt ở phím khác*/
            for (int i = 0; i < btnSymbol.length; i++) {
                btnSymbol[i].setText(shilfSymbol[i]);
            }
        }
        if (shift == false && capsLock == true) {
            /**Hiện chữ cái hoa*/
            for (int i = 0; i < btnText.length; i++) {
                btnText[i].setText(btnText[i].getText().toUpperCase());
            }
            /**Ẩn kí tự đặc biệt ở phím số*/
            for (int i = 0; i < btnNumber.length; i++) {
                btnNumber[i].setText(sNumber[i]);
            }
            /**Ẩn kí tự đặc biệt ở phím khác*/
            for (int i = 0; i < btnSymbol.length; i++) {
                btnSymbol[i].setText(sSymbol[i]);
            }
        }
        if (shift == false && capsLock == false) {
            /**Hiển chữ cái thường*/
            for (int i = 0; i < btnText.length; i++) {
                btnText[i].setText(btnText[i].getText().toLowerCase());
            }
            /**Ẩn kí tự đặc biệt ở phím số*/
            for (int i = 0; i < btnNumber.length; i++) {
                btnNumber[i].setText(sNumber[i]);
            }
            /**Ẩn kí tự đặc biệt ở phím khác*/
            for (int i = 0; i < btnSymbol.length; i++) {
                btnSymbol[i].setText(sSymbol[i]);
            }
        }
    }

    public void close() {
        if (typeVirtualKey == 0) {
            index = 0;
        }
    }

    private void actionBackspace() {
        try {
            /**nút BackSpace*/
            if (textField != null) {
                if (typeVirtualKey == 0) {
                    if (!(textField instanceof TextPopup)) {
                        /**Chỉ số index > or = */
                        if (index > fieldView.getText().length() || index == fieldView.getText().length()) {
                            index = fieldView.getText().length();
                        }
                        if (index == 0) {
                            return;
                        }
                        /**còn trường hợp index < caret hiện tại*/
                        index = fieldView.getCaretPosition();
                        StringBuilder builder = new StringBuilder();
                        builder.append(fieldView.getText());
                        /**Xóa phần tử cại vị trí caret - 1*/
                        builder.deleteCharAt(fieldView.getCaretPosition() - 1);
                        index = fieldView.getCaretPosition() - 1;
                        fieldView.setText(builder.toString());
                        textField.setText(builder.toString());
                        fieldView.requestFocus();
                        fieldView.setCaretPosition(index);
                        builder = null;
                    } else {
                        /**Nếu là một thể hiện của TextPopup*/
                        if (index > fieldView.getText().length() || index == fieldView.getText().length()) {
                            index = fieldView.getText().length();
                        }
                        if (index == 0) {
                            return;
                        }
                        /**Còn trường hợp nhỏ hơn, mà kiểu éo j cuối cùng cũng lấy chỉ số index = fieldView.getCaretPosition*/
                        index = fieldView.getCaretPosition();
                        StringBuilder builder = new StringBuilder();
                        builder.append(fieldView.getText());
                        /**Xóa kí tự tại chỉ số*/
                        builder.deleteCharAt(fieldView.getCaretPosition() - 1);
                        index = fieldView.getCaretPosition() - 1;
                        fieldView.setText(builder.toString());
                        fieldView.requestFocus();
                        fieldView.setCaretPosition(index);
                        builder = null;
                    }
                } else {
                    /**kiểu keyboard khách 0*/
                    if (index > textField.getText().length()) {
                        index = textField.getText().length();
                    }
                    if (index == 0) {
                        return;
                    }
                    index = textField.getCaretPosition();
                    StringBuilder builder = new StringBuilder();
                    builder.append(textField.getText());
                    /**/
                    builder.deleteCharAt(textField.getCaretPosition() - 1);
                    index = textField.getCaretPosition() - 1;
                    textField.setText(builder.toString());
                    textField.requestFocus();
                    textField.setCaretPosition(index);
                    builder = null;
                }
            }

            if (textArea != null) {
                if (typeVirtualKey == 0) {
                    if (index > textArea.getText().length() || index == textArea.getText().length()) {
                        index = textArea.getText().length();
                    }
                    if (index == 0) {
                        return;
                    }
                    index = areaView.getCaretPosition();
                    StringBuilder builder = new StringBuilder();
                    builder.append(textArea.getText());
                    builder.deleteCharAt(areaView.getCaretPosition() - 1);
                    index = areaView.getCaretPosition() - 1;
                    areaView.setText(builder.toString());
                    textArea.setText(builder.toString());
                    areaView.requestFocus();
                    areaView.setCaretPosition(index);
                    builder = null;
                } else {
                    if (index > textArea.getText().length() || index == textArea.getText().length()) {
                        index = textArea.getText().length();
                    }
                    if (index == 0) {
                        return;
                    }
                    index = textArea.getCaretPosition();
                    StringBuilder builder = new StringBuilder();
                    builder.append(textArea.getText());
                    builder.deleteCharAt(textArea.getCaretPosition() - 1);
                    index = textArea.getCaretPosition() - 1;
                    textArea.setText(builder.toString());
                    builder = null;
                    textArea.requestFocus();
                    textArea.setCaretPosition(index);
                }
            }
        } catch (Exception e) {
            return;
        }
    }

    private void actionDelete() {
        try {
            /**nút delete*/
            if (textField != null) {
                /**=0 là kiểu keypad, chưa xem*/
                if (typeVirtualKey == 0) {
                    if (!(textField instanceof TextPopup)) {
                        /**Chỉ số index > or = */
                        if (index > fieldView.getText().length() || index == fieldView.getText().length()) {
                            index = fieldView.getText().length();
                        }
                        if (index == 0) {
                            return;
                        }
                        /**còn trường hợp index < caret hiện tại*/
                        index = fieldView.getCaretPosition();
                        StringBuilder builder = new StringBuilder();
                        builder.append(fieldView.getText());
                        /**Xóa phần tử cại vị trí caret - 1*/
                        builder.deleteCharAt(fieldView.getCaretPosition() - 1);
                        index = fieldView.getCaretPosition() - 1;
                        fieldView.setText(builder.toString());
                        textField.setText(builder.toString());
                        fieldView.requestFocus();
                        fieldView.setCaretPosition(index);
                        builder = null;
                    } else {
                        /**Nếu là một thể hiện của TextPopup*/
                        if (index > fieldView.getText().length() || index == fieldView.getText().length()) {
                            index = fieldView.getText().length();
                        }
                        if (index == 0) {
                            return;
                        }
                        /**Còn trường hợp nhỏ hơn, mà kiểu éo j cuối cùng cũng lấy chỉ số index = fieldView.getCaretPosition*/
                        index = fieldView.getCaretPosition();
                        StringBuilder builder = new StringBuilder();
                        builder.append(fieldView.getText());
                        /**Xóa kí tự tại chỉ số*/
                        builder.deleteCharAt(fieldView.getCaretPosition() - 1);
                        index = fieldView.getCaretPosition() - 1;
                        fieldView.setText(builder.toString());
                        fieldView.requestFocus();
                        fieldView.setCaretPosition(index);
                        builder = null;
                    }
                } else {
                    /**caret ở cuối cùng*/
                    if (index == textField.getText().length()) {
                        return;
                    }
                    /**Ban đầu index là truyền vào, còn sau khi xóa, index sẽ khác, nên lưu lại index*/
                    StringBuilder builder = new StringBuilder();
                    builder.append(textField.getText());
                    /**/
                    builder.deleteCharAt(textField.getCaretPosition());
                    index = textField.getCaretPosition();
                    textField.setText(builder.toString());
                    textField.requestFocus();
                    textField.setCaretPosition(index);
                    builder = null;
                }
            }

            if (textArea != null) {
                /**=0 là Keypad, chưa hoàn thành*/
                if (typeVirtualKey == 0) {
                    if (index > textArea.getText().length() || index == textArea.getText().length()) {
                        index = textArea.getText().length();
                    }
                    if (index == 0) {
                        return;
                    }
                    index = areaView.getCaretPosition();
                    StringBuilder builder = new StringBuilder();
                    builder.append(textArea.getText());
                    builder.deleteCharAt(areaView.getCaretPosition() - 1);
                    index = areaView.getCaretPosition() - 1;
                    areaView.setText(builder.toString());
                    textArea.setText(builder.toString());
                    areaView.requestFocus();
                    areaView.setCaretPosition(index);
                    builder = null;
                } else {
                    /**caret ở cuối cùng*/
                    if (index == textArea.getText().length()) {
                        return;
                    }

                    StringBuilder builder = new StringBuilder();
                    builder.append(textArea.getText());
                    /**/
                    builder.deleteCharAt(textArea.getCaretPosition());
                    index = textArea.getCaretPosition();
                    textArea.setText(builder.toString());
                    textArea.requestFocus();
                    textArea.setCaretPosition(index);
                    builder = null;
                }
            }
        } catch (Exception e) {
            return;
        }
    }

    private void actionLeft() {
        try {
            if (textField != null) {
                if (typeVirtualKey == 0) {
                    if (index == 0) {
                        fieldView.requestFocus();
                        return;
                    }
                    index = fieldView.getCaretPosition();
                    fieldView.setCaretPosition(fieldView.getCaretPosition() - 1);
                    index = fieldView.getCaretPosition();
                    fieldView.requestFocus();
                } else {
                    if (index == 0) {
                        textField.requestFocus();
                        return;
                    }
                    index = textField.getCaretPosition();
                    textField.setCaretPosition(textField.getCaretPosition() - 1);
                    textField.requestFocus();
                    index = textField.getCaretPosition();
                }
            } else {
                if (typeVirtualKey == 0) {
                    if (index == 0) {
                        areaView.requestFocus();
                        return;
                    }
                    index = areaView.getCaretPosition();
                    areaView.setCaretPosition(areaView.getCaretPosition() - 1);
                    areaView.requestFocus();
                    index = areaView.getCaretPosition();
                } else {
                    if (index == 0) {
                        textArea.requestFocus();
                        return;
                    }
                    index = textArea.getCaretPosition();
                    textArea.setCaretPosition(textArea.getCaretPosition() - 1);
                    textArea.requestFocus();
                    index = textArea.getCaretPosition();
                }
            }
        } catch (Exception e) {
            return;
        }
    }

    private void actionRight() {
        try {
            if (textField != null) {
                if (typeVirtualKey == 0) {
                    if (index == fieldView.getText().length()) {
                        fieldView.requestFocus();
                        return;
                    }
                    index = fieldView.getCaretPosition();
                    fieldView.setCaretPosition(fieldView.getCaretPosition() + 1);
                    fieldView.requestFocus();
                    index = fieldView.getCaretPosition();
                } else {
                    if (index == textField.getText().length()) {
                        textField.requestFocus();
                        return;
                    }
                    index = textField.getCaretPosition();
                    textField.setCaretPosition(textField.getCaretPosition() + 1);
                    textField.requestFocus();
                    index = textField.getCaretPosition();
                }
            } else {
                if (typeVirtualKey == 0) {
                    if (index == fieldView.getText().length()) {
                        areaView.requestFocus();
                        return;
                    }
                    index = areaView.getCaretPosition();
                    areaView.setCaretPosition(areaView.getCaretPosition() + 1);
                    areaView.requestFocus();
                    index = areaView.getCaretPosition();
                } else {
                    if (index == textArea.getText().length()) {
                        textArea.requestFocus();
                        return;
                    }
                    index = textArea.getCaretPosition();
                    textArea.setCaretPosition(textArea.getCaretPosition() + 1);
                    textArea.requestFocus();
                    index = textArea.getCaretPosition();
                }
            }
        } catch (Exception e) {
            return;
        }
    }

    private void actionButtonMargin() {
        JButton[] btnText = {
            btnQ, btnW, btnE, btnR, btnT, btnY, btnU, btnI, btnO, btnP,
            btnA, btnS, btnD, btnF, btnG, btnH, btnJ, btnK, btnL,
            btnZ, btnX, btnC, btnV, btnB, btnN, btnM
        };
        //--
        JButton[] btnNumber = {btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn0};
        //--
        JButton[] btnSymbol = {
            btnSymbol1, btnSymbol2, btnSymbol3,
            btnSymbol4, btnSymbol5, btnSymbol6,
            btnSymbol7, btnSymbol8, btnSymbol9,
            btnSymbol10, btnSymbol11};
        //--
        int btnTextLength = btnText.length;
        for (int i = 0; i < btnTextLength; i++) {
            btnText[i].addMouseListener(new MouseEventKeyboard());
        }
        //--
        int btnNumberLength = btnNumber.length;
        for (int i = 0; i < btnNumberLength; i++) {
            btnNumber[i].addMouseListener(new MouseEventKeyboard());
        }
        //--
        int btnSymbolLength = btnSymbol.length;
        for (int i = 0; i < btnSymbolLength; i++) {
            btnSymbol[i].addMouseListener(new MouseEventKeyboard());
        }
    }

    
    public void setPreferredSizePanel(PanelTextKeyboard aThis) {
//        throw new UnsupportedOperationException("Not supported yet.");
    }

    
    public void setStatusKeyboard(boolean status) {
//        throw new UnsupportedOperationException("Not supported yet.");
    }

    
    public boolean getFlagShowAll() {
        return true;
    }

    
    public boolean getFlagShowSale() {
        return false;
    }
}
